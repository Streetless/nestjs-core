module.exports = {
  parser: "@typescript-eslint/parser",
  parserOptions: {
    project: "tsconfig.json",
    tsconfigRootDir: __dirname,
    sourceType: "module",
  },
  plugins: ["@typescript-eslint/eslint-plugin"],
  extends: ["eslint:recommended", "plugin:@typescript-eslint/recommended", "plugin:prettier/recommended"],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: [".eslintrc.js", "swagger.transformer.js"],
  rules: {
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/naming-convention": [
      "off",
      {
        selector: "interface",
        format: ["PascalCase"],
        prefix: ["I"],
      },
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "prettier/prettier": [
      "error",
      {
        arrowParens: "avoid",
      },
      {
        usePrettierrc: true,
      },
    ],
    "no-constant-binary-expression": "error",
    "no-constructor-return": "error",
    "no-duplicate-imports": ["error", { includeExports: false }],
    "no-new-native-nonconstructor": "error",
    "no-promise-executor-return": "error",
    "no-self-compare": "error",
    "no-template-curly-in-string": "error",
    "no-unmodified-loop-condition": "error",
    "no-unreachable-loop": "error",
    "require-atomic-updates": "error",
    "arrow-body-style": ["error", "as-needed", { requireReturnForObjectLiteral: true }],
    camelcase: ["error", { properties: "always", ignoreDestructuring: true, ignoreImports: true, ignoreGlobals: true }],
    "default-case-last": "error",
    "default-param-last": "error",
    eqeqeq: ["error", "smart"],
    "func-style": ["error", "expression"],
    "no-else-return": "error",
    "no-eval": "error",
    "no-confusing-arrow": ["error", { allowParens: true, onlyOneSimpleParam: false }],
    "no-extra-label": "error",
    "no-extra-semi": "error",
    "no-floating-decimal": "error",
    "no-implied-eval": "error",
    "no-invalid-this": "error",
    "no-label-var": "error",
    "no-mixed-operators": [
      "error",
      {
        allowSamePrecedence: true,
      },
    ],
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-return-assign": "error",
    "no-return-await": "error",
    "no-throw-literal": "error",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-template": "error",
    radix: "error",
    /* "sort-imports": [
      "error",
      {
        allowSeparatedGroups: true,
      },
    ], */
    "spaced-comment": [
      "error",
      "always",
      {
        line: {
          markers: ["/"],
          exceptions: ["-", "+"],
        },
        block: {
          markers: ["*"],
          balanced: true,
        },
      },
    ],
    yoda: ["error", "never"],
    "arrow-parens": ["error", "as-needed"],
    "arrow-spacing": ["error", { before: true, after: true }],
    "eol-last": ["error", "always"],
    "keyword-spacing": ["error", { before: true, after: true }],
    "dot-location": ["error", "property"],
    "func-call-spacing": ["error", "never"],
    "linebreak-style": ["error", "unix"],
    "new-parens": ["error", "always"],
    "no-multi-spaces": "error",
    "no-tabs": "error",
    "no-trailing-spaces": "error",
    "no-whitespace-before-property": "error",
    quotes: ["error", "double", { avoidEscape: true, allowTemplateLiterals: true }],
    semi: ["error", "always", { omitLastInOneLineBlock: false }],
    "semi-style": ["error", "last"],
    "space-before-blocks": ["error", "always"],
  },
};
